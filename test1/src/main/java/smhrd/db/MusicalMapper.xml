<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="MusicalMapper">

	<!-- 회원가입 -->
	<insert id="join" parameterType="smhrd.model.Member">
		INSERT INTO TB_USER (USER_ID,
		USER_PW, USER_NAME, USER_EMAIL, USER_TEL,
		JOINED_AT)
		VALUES (#{userId},
		#{userPw}, #{userName}, #{userEmail}, #{userTel},
		SYSTIMESTAMP)
	</insert>

	<!-- 로그인 -->
	<select id="login" parameterType="smhrd.model.Member"
		resultType="smhrd.model.Member">
		SELECT USER_ID AS userId,
		USER_PW AS userPw,
		USER_NAME AS
		userName,
		USER_EMAIL AS userEmail,
		USER_TEL AS userTel,
		JOINED_AT AS
		joinedAt,
		USER_IMG AS userImg
		FROM TB_USER
		WHERE USER_ID = #{userId} AND
		USER_PW = #{userPw}
	</select>


	<!-- 게시글 등록 -->
	<insert id="insertBoard" parameterType="smhrd.model.BoardVO">
		INSERT INTO TB_POST (
		POST_TITLE, POST_CONTENT, CREATED_AT,
		POST_VIEWS, POST_LIKES, USER_ID,
		POST_FILE_NAME, POST_FILE_PATH
		) VALUES (
		#{postTitle}, #{postContent},
		SYSDATE,
		#{postViews}, #{postLikes}, #{userId}, #{postFileName},
		#{postFilePath}
		)
	</insert>



	<!-- 게시글 목록 가져오기 -->
	<select id="getBoardList" resultType="smhrd.model.BoardVO">
		SELECT POST_IDX AS postIdx,
		POST_TITLE AS postTitle,
		POST_CONTENT AS postContent,
		CREATED_AT AS
		createdAt,
		POST_VIEWS AS postViews,
		POST_LIKES AS postLikes,
		USER_ID AS
		userId,
		POST_FILE_NAME AS postFileName,
		POST_FILE_PATH AS postFilePath
		FROM TB_POST
		ORDER BY CREATED_AT DESC
	</select>

	<!-- 게시글 상세보기 -->
	<select id="getBoardDetail" parameterType="int"
		resultType="smhrd.model.BoardVO">
		SELECT POST_IDX AS postIdx,
		POST_TITLE AS postTitle,
		POST_CONTENT AS postContent,
		CREATED_AT AS createdAt,
		POST_VIEWS AS
		postViews,
		POST_LIKES AS postLikes,
		USER_ID AS userId,
		POST_FILE_NAME AS
		postFileName,
		POST_FILE_PATH AS postFilePath
		FROM TB_POST
		WHERE POST_IDX
		= #{postIdx}
	</select>


	<!-- 조회수 증가 -->
	<update id="incrementViewCount" parameterType="int">
		UPDATE TB_POST
		SET
		POST_VIEWS = POST_VIEWS + 1
		WHERE POST_IDX = #{postIdx}
	</update>

	<!-- 좋아요 수 -->
	<update id="incrementPostLikes" parameterType="int">
		UPDATE TB_POST
		SET
		POST_LIKES = POST_LIKES + 1
		WHERE POST_IDX = #{postIdx}
	</update>


	<!-- 뮤지컬 목록 가져오기 -->
	<select id="getMusicalList" resultType="smhrd.model.MusicalVO">
		SELECT musical_id AS
		musicalId,
		musical_title AS musicalTitle,
		musical_poster AS
		musicalPoster,
		musical_create AS musicalCreate
		FROM TB_MUSICAL
	</select>

<!-- 상세정보 조회수 증가 -->
<update id="incrementMusicalViews" parameterType="string">
    UPDATE TB_SHOW
    SET SHOW_VIEWS = SHOW_VIEWS + 1
    WHERE MUSICAL_ID = #{musicalId}
</update>

	<!-- 상세정보 뮤지컬 가져오기 -->
	<select id="getMusicalDetails" parameterType="string"
		resultType="smhrd.model.MusicalDetailVO">
		SELECT M.MUSICAL_ID AS musicalId,
		M.MUSICAL_TITLE AS musicalTitle,
		M.MUSICAL_POSTER AS musicalPoster,
		M.MUSICAL_ST_DT AS musicalStDt,
		M.MUSICAL_ED_DT AS musicalEdDt,
		S.HALL_NAME AS hallName,
		S.SHOW_DT AS showDate,
		S.SHOW_RUNTIME AS showRuntime,
		S.SHOW_PRICE AS showPrice,
		S.SHOW_IMGS AS showImg,
		S.SHOW_IDX as showIdx,
		S.SHOW_VIEWS AS showViews
		FROM TB_MUSICAL M
		JOIN TB_SHOW S ON M.MUSICAL_ID = S.MUSICAL_ID
		WHERE M.MUSICAL_ID = #{musicalId}
	</select>

<!-- 리뷰 추가 -->
<insert id="insertReview" parameterType="smhrd.model.ReviewVO">
    INSERT INTO TB_REVIEW (
        SHOW_IDX, USER_ID, REVIEW_CONTENT, REVIEW_STAR, CREATED_AT, REVIEW_LIKES
    ) VALUES (
        #{showIdx}, #{userId}, #{reviewContent}, #{reviewStar}, CURRENT_TIMESTAMP, 0
    )
</insert>


	<!-- ResultMap 설정 -->
	<resultMap id="musicalDetailMap"
		type="smhrd.model.MusicalDetailVO">
		<result property="musicalId" column="musicalId" />
		<result property="musicalTitle" column="musicalTitle" />
		<result property="musicalPoster" column="musicalPoster" />
		<result property="musicalStDt" column="musical_ST_DT" />
		<result property="musicalEdDt" column="musical_ED_DT" />
		<result property="hallName" column="hallName" />
		<result property="showDate" column="showDate" />
		<result property="showRuntime" column="showRuntime" />
		<result property="showPrice" column="showPrice" />
		<result property="showImg" column="show_img" />
		<result property="showViews" column="showViews" />
	</resultMap>

	<!-- 상위 5개 뮤지컬 포스터 가져오기 -->
<select id="getTopMusicalPosters" resultType="smhrd.model.MusicalVO">
    <![CDATA[
    SELECT 
        SQ.MUSICAL_ID AS musicalId,
        SQ.MUSICAL_TITLE AS musicalTitle,
        SQ.MUSICAL_POSTER AS musicalPoster
    FROM (
        SELECT 
            M.MUSICAL_ID,
            M.MUSICAL_TITLE,
            M.MUSICAL_POSTER,
            ROW_NUMBER() OVER (ORDER BY S.SHOW_VIEWS DESC) AS RN
        FROM 
            TB_SHOW S
        JOIN 
            TB_MUSICAL M ON S.MUSICAL_ID = M.MUSICAL_ID
    ) SQ
    WHERE SQ.RN <= 5
    ]]>
</select>







</mapper>
